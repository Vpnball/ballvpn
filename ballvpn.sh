#!/usr/bin/env bash
# =========================================
# BallVPN UDP Manager (Menu v2)
# by ‡∏ö‡∏≠‡∏•‡∏´‡∏•‡∏±‡∏á‡∏ß‡∏±‡∏á
# =========================================
set -euo pipefail

# ==== ‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏°‡∏ô‡∏π ====
PASSWORD="${PASSWORD:-ballvpn}"   # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏î‡πâ ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤ env PASSWORD=xxx ‡∏ï‡∏≠‡∏ô‡∏£‡∏±‡∏ô‡∏Å‡πá‡πÑ‡∏î‡πâ

# ==== ‡∏Ñ‡πà‡∏≤‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô ====
VPN_SUBNET="${VPN_SUBNET:-10.8.0.0/16}"
DEF_DNAT_LO="${DNAT_LO:-22000}"
DEF_DNAT_HI="${DNAT_HI:-28000}"
DEF_UDP_PORT="${UDP_PORT:-5667}"
DEF_REDIR53="${REDIR53:-5300}"

GREEN='\033[1;32m'; RED='\033[1;31m'; CYAN='\033[1;36m'; YLW='\033[1;33m'; NC='\033[0m'

title() {
  echo -e "${CYAN}\n‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
  echo -e "‚ïë     üî∞  BallVPN UDP Menu v2 üî∞       ‚ïë"
  echo -e "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
}

need_root() {
  if [[ $EUID -ne 0 ]]; then
    echo -e "${RED}‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏±‡∏ô‡∏î‡πâ‡∏ß‡∏¢ root (sudo)${NC}"; exit 1
  fi
}

ask_pass() {
  read -rsp "‡πÉ‡∏™‡πà‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏°‡∏ô‡∏π: " input; echo
  [[ "$input" == "$PASSWORD" ]] || { echo -e "${RED}‚ùå ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á${NC}"; exit 1; }
}

get_iface() {
  ip -o -4 route show to default | awk '{print $5}' | head -n1
}

is_private() {
  [[ "$1" =~ ^10\.|^192\.168\.|^172\.(1[6-9]|2[0-9]|3[0-1])\. ]]
}

get_pubip() {
  local ifc="$1"
  # ‡∏•‡∏≠‡∏á‡∏à‡∏≤‡∏Å addr ‡∏ö‡∏ô iface ‡∏Å‡πà‡∏≠‡∏ô
  local ips; ips=$(ip -4 addr show dev "$ifc" | awk '/inet /{print $2}' | cut -d/ -f1)
  for ip in $ips; do if ! is_private "$ip"; then echo "$ip"; return; fi; done
  # ‡∏Ñ‡πà‡∏≠‡∏¢ fallback ‡∏≠‡∏≠‡∏Å‡πÄ‡∏ô‡πá‡∏ï
  (curl -s --max-time 3 ifconfig.me || true)
}

save_rules() {
  mkdir -p /etc/iptables
  iptables-save > /etc/iptables/rules.v4
  command -v netfilter-persistent >/dev/null 2>&1 && netfilter-persistent save >/dev/null 2>&1 || true
}

enable_forward() {
  sysctl -w net.ipv4.ip_forward=1 >/dev/null
  grep -q 'net.ipv4.ip_forward=1' /etc/sysctl.conf || echo 'net.ipv4.ip_forward=1' >> /etc/sysctl.conf
}

install_deps() {
  apt-get update -y >/dev/null 2>&1 || true
  apt-get install -y curl iptables-persistent >/dev/null 2>&1 || true
}

clear_nat_dups() {
  # ‡∏•‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ã‡πâ‡∏≥‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÉ‡∏™‡πà‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á (‡πÑ‡∏°‡πà‡∏•‡πâ‡∏≤‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î)
  local ifc="$1" lo="$2" hi="$3" uport="$4" r53="$5" pubip="$6"
  # DNAT ‡∏ä‡πà‡∏ß‡∏á‡∏û‡∏≠‡∏£‡πå‡∏ï
  while iptables -t nat -C PREROUTING -i "$ifc" -p udp --dport "$lo:$hi" -j DNAT --to-destination ":$uport" 2>/dev/null; do
    iptables -t nat -D PREROUTING -i "$ifc" -p udp --dport "$lo:$hi" -j DNAT --to-destination ":$uport"
  done
  # REDIRECT 53
  while iptables -t nat -C PREROUTING -i "$ifc" -p udp --dport 53 -j REDIRECT --to-ports "$r53" 2>/dev/null; do
    iptables -t nat -D PREROUTING -i "$ifc" -p udp --dport 53 -j REDIRECT --to-ports "$r53"
  done
  # SNAT
  while iptables -t nat -C POSTROUTING -s "$VPN_SUBNET" -j SNAT --to-source "$pubip" 2>/dev/null; do
    iptables -t nat -D POSTROUTING -s "$VPN_SUBNET" -j SNAT --to-source "$pubip"
  done
}

set_core_rules() {
  local ifc="$1" lo="$2" hi="$3" uport="$4" r53="$5" pubip="$6"
  # ‡∏Å‡∏é‡∏´‡∏•‡∏±‡∏Å
  iptables -t nat -A PREROUTING -i "$ifc" -p udp --dport "$lo:$hi" -j DNAT --to-destination ":$uport"
  iptables -t nat -A PREROUTING -i "$ifc" -p udp --dport 53 -j REDIRECT --to-ports "$r53"
  iptables -t nat -A POSTROUTING -s "$VPN_SUBNET" -j SNAT --to-source "$pubip"
}

install_all() {
  title
  echo -e "${YLW}‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á/‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏•‡∏±‡∏Å...${NC}"
  enable_forward
  install_deps
  local ifc; ifc=$(get_iface); [[ -n "$ifc" ]] || { echo -e "${RED}‡πÑ‡∏°‡πà‡∏û‡∏ö default interface${NC}"; exit 1; }
  local pub; pub=$(get_pubip "$ifc"); [[ -n "$pub" ]] || { echo -e "${RED}‡∏´‡∏≤ Public IP ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ${NC}"; exit 1; }

  clear_nat_dups "$ifc" "$DEF_DNAT_LO" "$DEF_DNAT_HI" "$DEF_UDP_PORT" "$DEF_REDIR53" "$pub"
  set_core_rules "$ifc" "$DEF_DNAT_LO" "$DEF_DNAT_HI" "$DEF_UDP_PORT" "$DEF_REDIR53" "$pub"
  save_rules

  echo -e "${GREEN}\nüéâ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à${NC}"
  echo -e "üåé IP  : $pub"
  echo -e "üì° UDP : $DEF_UDP_PORT"
  echo -e "üß© IF  : $ifc"
}

add_dnat_range() {
  title
  local ifc; ifc=$(get_iface)
  read -rp "‡∏ä‡πà‡∏ß‡∏á‡∏û‡∏≠‡∏£‡πå‡∏ï‡∏ï‡πâ‡∏ô (‡πÄ‡∏ä‡πà‡∏ô 20000) [‡∏Ñ‡πà‡∏≤‡πÄ‡∏î‡∏¥‡∏° $DEF_DNAT_LO]: " lo; lo=${lo:-$DEF_DNAT_LO}
  read -rp "‡∏ä‡πà‡∏ß‡∏á‡∏û‡∏≠‡∏£‡πå‡∏ï‡∏ó‡πâ‡∏≤‡∏¢ (‡πÄ‡∏ä‡πà‡∏ô 28000) [‡∏Ñ‡πà‡∏≤‡πÄ‡∏î‡∏¥‡∏° $DEF_DNAT_HI]: " hi; hi=${hi:-$DEF_DNAT_HI}
  read -rp "‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡∏†‡∏≤‡∏¢‡πÉ‡∏ô (UDP port) [‡∏Ñ‡πà‡∏≤‡πÄ‡∏î‡∏¥‡∏° $DEF_UDP_PORT]: " up; up=${up:-$DEF_UDP_PORT}
  iptables -t nat -A PREROUTING -i "$ifc" -p udp --dport "$lo:$hi" -j DNAT --to-destination ":$up"
  save_rules
  echo -e "${GREEN}‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° DNAT $lo:$hi -> :$up ‡∏ö‡∏ô $ifc ‡πÅ‡∏•‡πâ‡∏ß${NC}"
}

flush_all_ballvpn() {
  title
  local ifc; ifc=$(get_iface)
  # ‡∏•‡πâ‡∏≤‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏°‡∏±‡∏Å‡πÉ‡∏ä‡πâ (‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏Å‡∏ß‡πà‡∏≤‡∏•‡πâ‡∏≤‡∏á‡∏ó‡∏±‡πâ‡∏á table)
  iptables -t nat -S PREROUTING | grep -E "DNAT|REDIRECT" | awk '{print $0}' | \
  while read -r rule; do
    # ‡πÅ‡∏õ‡∏•‡∏á -A ‡πÄ‡∏õ‡πá‡∏ô -D ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏ö
    iptables -t nat ${rule/-A /-D } 2>/dev/null || true
  done
  iptables -t nat -S POSTROUTING | grep SNAT | grep "$VPN_SUBNET" | awk '{print $0}' | \
  while read -r rule; do iptables -t nat ${rule/-A /-D } 2>/dev/null || true; done
  save_rules
  echo -e "${GREEN}‚úÖ ‡∏•‡πâ‡∏≤‡∏á‡∏Å‡∏é NAT ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö BallVPN ‡πÅ‡∏•‡πâ‡∏ß${NC}"
}

show_status() {
  title
  local ifc pub; ifc=$(get_iface); pub=$(get_pubip "$ifc")
  echo -e "üåé Public IP : ${pub:-unknown}"
  echo -e "üß© IFACE     : ${ifc:-unknown}"
  echo -e "üõ£  IP Forward: $(sysctl -n net.ipv4.ip_forward 2>/dev/null)"
  echo -e "\n${YLW}== NAT PREROUTING ==${NC}"
  iptables -t nat -L PREROUTING -n -v | grep -E 'DNAT|REDIRECT' || echo "(‡∏ß‡πà‡∏≤‡∏á)"
  echo -e "\n${YLW}== NAT POSTROUTING ==${NC}"
  iptables -t nat -L POSTROUTING -n -v | grep SNAT || echo "(‡∏ß‡πà‡∏≤‡∏á)"
}

menu() {
  while :; do
    title
    echo -e "${YLW}1) ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á/‡∏£‡∏µ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á BallVPN (DNAT+SNAT+save)${NC}"
    echo -e "${YLW}2) ‡πÄ‡∏û‡∏¥‡πà‡∏° DNAT ‡∏ä‡πà‡∏ß‡∏á‡∏û‡∏≠‡∏£‡πå‡∏ï ‚Üí :‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á UDP${NC}"
    echo -e "${YLW}3) ‡∏•‡πâ‡∏≤‡∏á‡∏Å‡∏é BallVPN (DNAT/REDIRECT/SNAT)${NC}"
    echo -e "${YLW}4) ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ NAT / Interface / Forward${NC}"
    echo -e "${YLW}5) ‡∏≠‡∏≠‡∏Å‡πÄ‡∏°‡∏ô‡∏π${NC}"
    read -rp "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏ô‡∏π [1-5]: " ans
    case "$ans" in
      1) install_all; read -rp "‡∏Å‡∏î Enter ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏°‡∏ô‡∏π...";;
      2) add_dnat_range; read -rp "‡∏Å‡∏î Enter ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏°‡∏ô‡∏π...";;
      3) flush_all_ballvpn; read -rp "‡∏Å‡∏î Enter ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏°‡∏ô‡∏π...";;
      4) show_status; read -rp "‡∏Å‡∏î Enter ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏°‡∏ô‡∏π...";;
      5) exit 0;;
      *) echo -e "${RED}‡πÄ‡∏°‡∏ô‡∏π‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á${NC}"; sleep 1;;
    esac
  done
}

# ==== MAIN ====
need_root
title
ask_pass
menu
